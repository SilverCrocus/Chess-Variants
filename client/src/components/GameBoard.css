.game-container {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  padding: 2rem;
  gap: 3rem;
  min-height: 100vh;
  background: 
    radial-gradient(ellipse at 20% 20%, rgba(102, 126, 234, 0.1) 0%, transparent 50%),
    radial-gradient(ellipse at 80% 80%, rgba(118, 75, 162, 0.1) 0%, transparent 50%);
  position: relative;
}

.game-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    radial-gradient(circle at 30% 70%, rgba(79, 172, 254, 0.05) 0%, transparent 50%),
    radial-gradient(circle at 70% 30%, rgba(240, 147, 251, 0.05) 0%, transparent 50%);
  pointer-events: none;
  z-index: -1;
}

.chessboard-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
}

/* Let react-chessboard handle its own drag positioning */

.chessboard-container::before {
  content: '';
  position: absolute;
  top: -20px;
  left: -20px;
  right: -20px;
  bottom: -20px;
  background: var(--card-gradient);
  border-radius: 24px;
  border: 1px solid var(--border-color);
  box-shadow: var(--shadow-heavy);
  z-index: -1;
  pointer-events: none; /* Prevent this from interfering with drag */
}

.game-info {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  width: 350px;
  background: var(--card-gradient);
  padding: 2rem;
  border-radius: 20px;
  border: 1px solid var(--border-color);
  box-shadow: var(--shadow-medium);
  backdrop-filter: blur(10px);
  position: relative;
  overflow: hidden;
}

.game-info::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    radial-gradient(circle at 20% 20%, rgba(102, 126, 234, 0.05) 0%, transparent 50%),
    radial-gradient(circle at 80% 80%, rgba(118, 75, 162, 0.05) 0%, transparent 50%);
  pointer-events: none;
  z-index: -1;
}

.game-controls {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.room-form {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.game-info h2 {
  margin-top: 0;
  text-align: center;
  font-size: 2rem;
  font-weight: 700;
  background: var(--primary-gradient);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 20px rgba(102, 126, 234, 0.3);
}

.status-message {
  font-size: 1.1rem;
  text-align: center;
  min-height: 60px;
  color: var(--text-secondary);
  line-height: 1.5;
  padding: 1rem;
  background: rgba(255, 255, 255, 0.02);
  border-radius: 12px;
  border: 1px solid var(--border-color);
  display: flex;
  align-items: center;
  justify-content: center;
}

.room-input {
  width: 100%;
  padding: 1rem;
  border: 1px solid var(--border-color);
  border-radius: 12px;
  background: rgba(255, 255, 255, 0.02);
  color: var(--text-primary);
  font-size: 1rem;
  font-family: inherit;
  box-sizing: border-box;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  backdrop-filter: blur(10px);
}

.room-input:focus {
  outline: none;
  border-color: rgba(102, 126, 234, 0.5);
  box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
  background: rgba(255, 255, 255, 0.05);
}

.room-input::placeholder {
  color: var(--text-muted);
}

.btn {
  padding: 1rem 1.5rem;
  border: 1px solid var(--border-color);
  border-radius: 12px;
  background: var(--primary-gradient);
  color: white;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  text-align: center;
  position: relative;
  overflow: hidden;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.btn:hover::before {
  left: 100%;
}

.btn:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-medium);
  filter: brightness(1.1);
}

.btn:active {
  transform: translateY(0);
}

.btn-secondary {
  background: var(--surface-gradient);
  color: var(--text-secondary);
}

.btn-secondary:hover {
  background: var(--surface-gradient);
  filter: brightness(1.2);
  color: var(--text-primary);
}

.btn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

.btn:focus-visible {
  outline: 2px solid rgba(102, 126, 234, 0.6);
  outline-offset: 2px;
}

.room-input:focus-visible {
  outline: 2px solid rgba(102, 126, 234, 0.6);
  outline-offset: 2px;
}

.draw-response-buttons {
  display: flex;
  gap: 0.75rem;
  margin-top: 0.5rem;
}

.btn-success {
  background: linear-gradient(135deg, #10b981, #059669);
  border: 1px solid #047857;
}

.btn-success:hover:not(:disabled) {
  background: linear-gradient(135deg, #059669, #047857);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(16, 185, 129, 0.3);
}

.btn-danger {
  background: linear-gradient(135deg, #ef4444, #dc2626);
  border: 1px solid #b91c1c;
}

.btn-danger:hover:not(:disabled) {
  background: linear-gradient(135deg, #dc2626, #b91c1c);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(239, 68, 68, 0.3);
}

.disconnect-notification {
  background: linear-gradient(135deg, #2a2a2a 0%, #1a1a1a 100%);
  border: 1px solid #6366f1;
  border-radius: 12px;
  padding: 20px;
  margin: 15px 0;
  text-align: center;
  box-shadow: 0 4px 15px rgba(99, 102, 241, 0.2);
}

.disconnect-message {
  font-size: 16px;
  font-weight: bold;
  color: #e5e7eb;
  margin: 0 0 12px 0;
}

.countdown-timer {
  font-size: 22px;
  font-weight: bold;
  color: #f87171;
  margin: 10px 0;
  font-family: 'Courier New', monospace;
  background: rgba(99, 102, 241, 0.1);
  border: 1px solid rgba(99, 102, 241, 0.3);
  padding: 10px 16px;
  border-radius: 8px;
  display: inline-block;
}

.countdown-subtext {
  font-size: 13px;
  color: #9ca3af;
  margin: 8px 0 0 0;
  font-style: italic;
}

.error-message {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background: rgba(220, 53, 69, 0.1);
  border: 1px solid rgba(220, 53, 69, 0.3);
  border-radius: 8px;
  color: #ff6b6b;
  font-size: 0.875rem;
  font-weight: 500;
  margin-top: 0.5rem;
}

.error-icon {
  font-size: 1rem;
  animation: shake 0.5s ease-in-out;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-2px); }
  75% { transform: translateX(2px); }
}

@media (max-width: 1024px) {
  .game-container {
    flex-direction: column;
    align-items: center;
    gap: 2rem;
  }
  
  .game-info {
    width: 100%;
    max-width: 500px;
  }
}

@media (max-width: 768px) {
  .game-container {
    padding: 1rem;
    gap: 1.5rem;
    min-height: calc(100vh - 140px); /* Account for mobile header */
  }
  
  .game-info {
    padding: 1.5rem;
    width: 100%;
    max-width: none;
    order: -1; /* Move game info above chessboard on mobile */
  }
  
  .chessboard-container {
    order: 1;
  }
  
  .chessboard-container::before {
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
  }
  
  .room-form {
    gap: 1rem;
  }
  
  .btn {
    padding: 0.875rem 1.25rem;
    font-size: 0.9rem;
  }
  
  .draw-response-buttons {
    flex-direction: column;
    gap: 0.5rem;
  }
}
